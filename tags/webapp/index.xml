<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebApp on Velocity Blog</title>
    <link>https://yashwanth164.github.io/blog.v3loz1ty/tags/webapp/</link>
    <description>Recent content in WebApp on Velocity Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>v3loz1ty</copyright>
    <lastBuildDate>Wed, 04 Jun 2025 19:09:43 +0100</lastBuildDate><atom:link href="https://yashwanth164.github.io/blog.v3loz1ty/tags/webapp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Client Side Template Injection (CSTI)</title>
      <link>https://yashwanth164.github.io/blog.v3loz1ty/posts/clientside_template_injection/</link>
      <pubDate>Wed, 04 Jun 2025 19:09:43 +0100</pubDate>
      
      <guid>https://yashwanth164.github.io/blog.v3loz1ty/posts/clientside_template_injection/</guid>
      <description>Introduction Template injection is a critical web security vulnerability that occurs when user input is embedded into a template in an unsafe manner. This vulnerability allows attackers to inject malicious template code that can lead to remote code execution, data theft, or server compromise. Template injection can occur on both client-side and server-side. This blog focuses on client-side template injection in AngularJS framework which leads to XSS attacks.
Developed by Google, AngularJS serves as a powerful frontend framework for building dynamic web applications.</description>
    </item>
    
  </channel>
</rss>
